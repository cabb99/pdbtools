#!/usr/bin/env python

# Copyright 2007, Michael J. Harms
# This program is distributed under General Public License v. 3.  See the file
# COPYING for a copy of the license.

"""
pdb_download.py

Download a pdb or set of pdb files and uncompress them.

Usage:
    pdb_download.py [--cif] pdb_id or file w/ list of ids
"""

__author__ = "Michael J. Harms"
__date__ = "070521"
__usage__ = "pdb_download.py [--cif] pdb_id or file w/ list of ids"

import os, shutil, sys
from pdbtools.helper import cmdline
from pdbtools import download

def main():
    """
    If the function is called from the command line.
    """

    try:
        file_input = sys.argv[1:]
        # Check if --cif is present
        if '--cif' in file_input:
            is_cif = True
            file_input.remove('--cif')
        else:
            is_cif = False
    except IndexError:
        print(__usage__)
        sys.exit()

    pdb_list = []
    for arg in file_input:
        if os.path.isfile(arg) and arg[-4:] != ".pdb":

            # Read in input file
            f = open(arg,"r")
            tmp_list = f.readlines()
            f.close()

            # Strip comments and blank lines, recombine file, then split on all
            # white space
            tmp_list = [p for p in tmp_list if p[0] != "#" and p.strip() != ""]
            tmp_list = "".join(tmp_list)
            tmp_list = tmp_list.split()
            tmp_list = [p.lower() for p in tmp_list]
            pdb_list.extend(tmp_list)

        else:

            # Lower case, remove .pdb if appended
            pdb_id = arg.lower()
            if pdb_id[-4:] == ".pdb":
                pdb_id = pdb_id[:-4]

            pdb_list.append(pdb_id)

    # Download files (PDB by default, CIF if --cif is given)
    download.pdbDownload(pdb_list, file_format="cif" if is_cif else "pdb")

if __name__ == "__main__":
    main()
